# https://github.com/cloudnative-pg/charts/blob/ca84da16141b39679b009c682a5679541fd78b70/charts/cluster/values.yaml
version:
  postgresql: "17.2"
  # ghcr.io/cloudnative-pg/postgresql:17.2

###
# -- Cluster mode of operation. Available modes:
# * `standalone` - default mode. Creates new or updates an existing CNPG cluster.
# * `replica` - Creates a replica cluster from an existing CNPG cluster. # TODO
# * `recovery` - Same as standalone but creates a cluster from a backup, object store or via pg_basebackup.
mode: standalone

cluster:
  instances: 2

  storage:
    size: 20Gi
    storageClass: "do-block-storage-retain"

  walStorage:
    enabled: true
    size: 5Gi
    storageClass: "do-block-storage-retain"

# services:
#   additional:
#     - selectorType: r
#       serviceTemplate:
#         metadata:
#           name: "blobscan-pool-r-external"
#         spec:
#           type: NodePort

  # -- Resources requirements of every generated Pod.
  # Please refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ for more information.
  # We strongly advise you use the same setting for limits and requests so that your cluster pods are given a Guaranteed QoS.
  # See: https://kubernetes.io/docs/concepts/workloads/pods/pod-qos/
  resources:

  monitoring:
    enabled: true
    podMonitor:
      # -- Whether to enable the PodMonitor
      enabled: true
      # --The list of relabelings for the PodMonitor.
      # Applied to samples before scraping.
      relabelings: []
      # -- The list of metric relabelings for the PodMonitor.
      # Applied to samples before ingestion.
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: cnpg_pg_settings_setting
          action: drop
    prometheusRule:
      # -- Whether to enable the PrometheusRule automated alerts
      enabled: true
      # -- Exclude specified rules
      excludeRules: []
        # - CNPGClusterZoneSpreadWarning
    # -- Whether the default queries should be injected.
    # Set it to true if you don't want to inject default queries into the cluster.
    disableDefaultQueries: false
    # -- Custom Prometheus metrics
    # Will be stored in the ConfigMap
    customQueries: []
    #  - name: "pg_cache_hit_ratio"
    #    query: "SELECT current_database() as datname, sum(heap_blks_hit) / (sum(heap_blks_hit) + sum(heap_blks_read)) as ratio FROM pg_statio_user_tables;"
    #    metrics:
    #      - datname:
    #          usage: "LABEL"
    #          description: "Name of the database"
    #      - ratio:
    #          usage: GAUGE
    #          description: "Cache hit ratio"
    # -- The list of secrets containing the custom queries
    customQueriesSecret: []
    #  - name: custom-queries-secret
    #    key: custom-queries

  # -- BootstrapInitDB is the configuration of the bootstrap process when initdb is used.
  # See: https://cloudnative-pg.io/documentation/current/bootstrap/
  # See: https://cloudnative-pg.io/documentation/current/cloudnative-pg.v1/#postgresql-cnpg-io-v1-bootstrapinitdb
  # initdb:
  #  database: app

  # -- Configure the metadata of the generated service account
  serviceAccountTemplate: {}

  additionalLabels: {}
  # annotations: {}

poolers:
  - name: rw
    type: rw
    poolMode: transaction
    instances: 2
    # Allow root user only from localhost, blocking remote connections
    # TODO: Add to direct connection too
    pg_hba:
      - local all postgres           trust
      - host  all postgres 0.0.0.0/0 reject
      - host  all postgres ::0/0     reject
    # https://manpages.debian.org/testing/pgbouncer/pgbouncer.5.en.html
    # The controller will recreate it at /controller/configs/pgbouncer.ini
    # Example defaults en /etc/pgbouncer/pgbouncer.ini.example
    # parameters:
    #   max_client_conn: "1000"
    #   default_pool_size: "25"
    #   client_tls_sslmode: "require"
    #   server_tls_sslmode: "require"
    monitoring:
      enabled: true
      podMonitor:
        enabled: true
    # -- Custom PgBouncer deployment template.
    # Use to override image, specify resources, etc.
    template:
      metadata:
        labels:
          app: pooler
      spec:
        containers: []
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pooler
              topologyKey: "kubernetes.io/hostname"
