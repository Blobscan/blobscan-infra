blobscan-api:
  annotations:
    keel.sh/policy: major
    keel.sh/approvals: "0"
  podLabels:
    environment: gnosis

  # externalConfigMaps:
  #   - "blobscan"
  fullnameOverride: "blobscan-api"
  config:
    CHAIN_ID: "100"
    NETWORK_NAME: "gnosis"
    BLOBSCAN_API_BASE_URL: "https://api.gnosis.blobscan.com"
    POSTGRES_STORAGE_ENABLED: "false"
    SWARM_STORAGE_ENABLED: "true"
    SWARM_BATCH_ID: "aa371babdbcad2c511066941e6f638383825e489a7e69e2665d7d046d8bbe116"
    GOOGLE_STORAGE_ENABLED: "true"
    GOOGLE_STORAGE_BUCKET_NAME: blobscan-production
    GOOGLE_STORAGE_PROJECT_ID: blobscan-379218
    BEE_ENDPOINT: "http://bee-0.swarm.svc.cluster.local:1633"
    METRICS_ENABLED: "true"
    LOG_LEVEL: "http"
    BLOB_DATA_API_ENABLED: "false"

  extraEnv:
    - name: BLOB_PROPAGATOR_COMPLETED_JOBS_AGE
      value: "1"

  bullmqExporter:
    enabled: true
    databaseMapping: "0:gnosis"
    image:
      pullPolicy: "Always"
    service:
      annotations:
        k8s.grafana.com/scrape: "true"

  service:
    annotations:
      k8s.grafana.com/scrape: "true"

  image:
    tag: 1
    pullPolicy: "Always"

  ingress:
    enabled: true
    className: nginx-pp
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-dns-gcp
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: "api.gnosis.blobscan.com"
        paths:
        - path: "/"
          pathType: Prefix
    tls:
      - secretName: api-gnosis-blobscan-tls
        hosts:
          - "api.gnosis.blobscan.com"

  resources:
    limits:
      cpu: 2
      memory: 1Gi

    requests:
      cpu: 100m
      memory: 512Mi

blobscan-indexer:
  # FIXME
  enabled: false
  annotations:
    keel.sh/policy: major
    keel.sh/approvals: "0"
  podLabels:
    environment: gnosis
  fullnameOverride: "blobscan-indexer"
  config:
    BLOBSCAN_API_ENDPOINT: "http://blobscan-api:3001"
    RUST_LOG: "blob_indexer=INFO"

  image:
    tag: 0
    pullPolicy: "Always"

blobscan-web:
  replicas: 2
  annotations:
    keel.sh/policy: major
    keel.sh/approvals: "0"
  podLabels:
    environment: gnosis
  fullnameOverride: "blobscan-web"
  config:
    NETWORK_NAME: "gnosis"
    BLOBSCAN_API_BASE_URL: "https://api.gnosis.blobscan.com"
    BLOBSCAN_API_PORT: 443
    POSTGRES_STORAGE_ENABLED: "false"
    SWARM_STORAGE_ENABLED: "true"
    GOOGLE_STORAGE_ENABLED: "true"
    GOOGLE_STORAGE_BUCKET_NAME: blobscan-production
    GOOGLE_STORAGE_PROJECT_ID: blobscan-379218
    METRICS_ENABLED: "true"
    LOG_LEVEL: info
    BEE_ENDPOINT: "http://bee-0.swarm.svc.cluster.local:1633"
  extraEnv:
    - name: PUBLIC_NETWORK_NAME
      value: "gnosis"
    - name: PUBLIC_EXPLORER_BASE_URL
      value: "https://dora.gnosis.ethpandaops.io/"
    - name: PUBLIC_BEACON_BASE_URL
      value: "https://gnosis.beaconcha.in/"
    - name: PUBLIC_POSTHOG_ID
      value: "phc_n7WONIedZmpeWUlvgQq2KW3p59g6Au8JDTRVciqpcWl"
    - name: PUBLIC_POSTHOG_HOST
      value: "https://us.i.posthog.com"
    - name: SENTRY_ORG
      value: "blossom-labs"
    - name: SENTRY_PROJECT
      value: "blobscan-web"
    - name: SENTRY_IGNORE_API_RESOLUTION_ERROR
      value: "1"

  image:
    tag: 1
    pullPolicy: Always

  ingress:
    enabled: true
    className: nginx-pp
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-dns-gcp
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: "gnosis.blobscan.com"
        paths:
        - path: "/"
          pathType: Prefix
    tls:
      - secretName: gnosis-blobscan-tls
        hosts:
          - "gnosis.blobscan.com"

  resources:
    limits:
      cpu: 2
      memory: 512Mi

    requests:
      cpu: 100m
      memory: 128Mi

blobscandb:
  enabled: false

redis:
  enabled: true
  global:
    defaultStorageClass: "do-block-storage-retain"

  metrics:
    enabled: true
    serviceMonitor:
      # TODO: enable
      enabled: false

  master:
    persistence:
      enabled: true
      storageClass: "do-block-storage-retain"
      accessModes:
        - ReadWriteOnce
      size: 20Gi
    resources:
      limits:
        cpu: 150m
        memory: 2Gi
        ephemeral-storage: 2Gi

      requests:
        cpu: 100m
        memory: 128Mi
        ephemeral-storage: 50Mi
  # TODO:
  #  configuration: "maxmemory-policy noeviction"
